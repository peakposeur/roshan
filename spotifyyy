import random

def luhn_checksum(card_number):
    def digits_of(n):
        return [int(d) for d in str(n)]
    digits = digits_of(card_number)
    odd_digits = digits[-1::-2]
    even_digits = digits[-2::-2]
    checksum = sum(odd_digits)
    for d in even_digits:
        checksum += sum(digits_of(d * 2))
    return checksum % 10

def generate_card_number(bin_prefix, length):
    card_number = [int(d) for d in str(bin_prefix)]
    while len(card_number) < (length - 1):
        card_number.append(random.randint(0, 9))
    checksum = luhn_checksum(int(''.join(map(str, card_number))) * 10)
    card_number.append((10 - checksum) % 10)
    return ''.join(map(str, card_number))

# Example BIN prefix (first six digits for educational purposes)
bin_prefix = "453957"  # You can use any valid BIN prefix
card_length = 16  # Standard length for credit card numbers
generated_card = generate_card_number(bin_prefix, card_length)
print(f"Generated Card Number: {generated_card}")
